"""
Сложность данной  O(n^2) т.к имеет вложенный цикл.
Функция проходит по сетке и считает периметр острова.
Функция возвращает периметр острова.
"""

from typing import List

def islandPerimeter(grid: List[List[int]]) -> int:
    perimeter = 0                                               # Задаем переменную в которую впишем результат
    for i in range(len(grid)):                                  # Цикл, проходящий по сетке
        for j in range(len(grid[0])):                           # Цикл проходящий по строке сетки
            if(grid[i][j] == 1):                                # Если элемент сетки равен 1
                if(i-1 < 0 or grid[i-1][j] != 1):               # Если текущая строка минус 1 меньше нуля...
                                                                # Или этот-же элемент предыдущей строки не равна единице
                    perimeter += 1                              # То к счетчику  прибавляем 1
                if(i+1 > len(grid)-1  or grid[i+1][j] != 1):    # Если следующая строка сетки больше длины сетки минус 1...
                                                                # Или этот-же элемент следующей строки сетки не равна единице
                    perimeter += 1                              # То к счетчику периметра прибавляем 1
                if(j-1 < 0 or grid[i][j-1] != 1):               # Если элемент минус 1 меньше 0 или предыдущий элемент не равен 1
                    perimeter += 1                              # То к счетчику периметра прибавляем 1
                if(j+1 > len(grid[0])-1  or grid[i][j+1] != 1): # Если элементу прибавить единицу и значение будет больше
                                                                # Длины первой строки сетки минус единица или следующий элемент не равен 1
                    perimeter += 1                              # То к счетчику периметра прибавляем 1
    return perimeter                                            # Возвращается значение perimeter

print(islandPerimeter([[1, 0]]))
